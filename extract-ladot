#!/usr/bin/perl

use strict;

my @bike_scale = (
        0.135580, 0.124213, 0.102924, 0.090522,
        0.079010, 0.075815, 0.065591, 0.079297,
        0.079612, 0.056632, 0.043860, 0.037281,
        0.034396, 0.032231, 0.033318, 0.029081,
        0.030340, 0.035423, 0.051378, 0.071171,
        0.074837, 0.104159, 0.185186, 0.231432,
        0.217799, 0.297235, 0.399790, 0.472041,
        0.470859, 0.656878, 0.867781, 0.949848,
        0.765337, 0.972644, 1.030303, 1.068285,
        0.913767, 0.867069, 0.811178, 0.809091,
        0.749240, 0.603631, 0.744713, 0.747734,
        0.591528, 0.549168, 0.586364, 0.719033,
        0.652968, 0.685801, 0.632931, 0.607251,
        0.700906, 0.626324, 0.768882, 0.776097,
        0.720611, 0.658015, 0.619335, 0.768882,
        0.805136, 0.844175, 0.749245, 0.895770,
        0.885196, 0.969789, 0.974320, 1.000000,
        1.166667, 1.249231, 1.160606, 1.145455,
        1.077103, 0.908879, 0.836493, 0.785047,
        0.672393, 0.626259, 0.591632, 0.574672,
        0.546938, 0.488750, 0.454578, 0.427747,
        0.434532, 0.421258, 0.383425, 0.323683,
        0.320305, 0.301302, 0.289505, 0.246826,
        0.235451, 0.216291, 0.195450, 0.167323,
);

sub fixtime {
	my $time = $_[0];

	if ($time =~ /^ *(\d+) *- *(\d+) */) {
		my ($t1, $t2) = ($1, $2);
		my ($h1, $m1, $h2, $m2);

		if ($t1 < 100) {
			$h1 = $t1;
			$m1 = 0;
		} else {
			$h1 = int($t1 / 100);
			$m1 = int($t1 % 100);
		}

		if ($t2 < 100) {
			$h2 = $t2;
			$m2 = 0;
		} else {
			$h2 = int($t2 / 100);
			$m2 = int($t2 % 100);
		}

		if ($h1 < 7) {
			$h1 += 12;
		}
		if ($h2 < $h1) {
			$h2 += 12;
		}

		if (sprintf("%02d:%02d", $h1, $m1) ge sprintf("%02d:%02d", $h2, $m2)) {
			return "error $time $t1 $2";
		}

		return sprintf("%02d:%02d-%02d:%02d", $h1, $m1, $h2, $m2);
	} elsif ($time =~ /^(\d\d?):(\d\d)-(\d\d?):(\d\d)$/ ||
	         $time =~ /^(\d\d?)\.(\d\d?)-(\d\d?)\.(\d\d?)$/) {
		my ($h1, $m1, $h2, $m2) = ($1, $2, $3, $4);

		if ($h1 < 7) {
			$h1 += 12;
		}
		if ($h2 < $h1) {
			$h2 += 12;
		}
		if ($m1 == 3) {
			$m1 = 30;
		}
		if ($m2 == 3) {
			$m2 = 30;
		}

		if (sprintf("%02d%02d", $h1, $m1) ge sprintf("%02d%02d", $h2, $m2)) {
			return "error $time $h1$m1 $h2$m2";
		}

		return sprintf("%02d:%02d-%02d:%02d", $h1, $m1, $h2, $m2);
	}

	return ">>$time<<";
}

my $first = 1;

SHEET:
while (1) {
	my $ns = "";
	my $ew = "";
	my $date = "";
	my $weather = "";
	my $leg = "";
	my $leg2 = "";
	my %movement = ();
	my @bikes = ();
	my $anything = 0;
	my $ok = 1;

	while (<>) {
		if ($first) {
			print STDERR "$ARGV\n";
			$first = 0;
		}

		last if /^STREET/;
		last if /\014/;
	}

	while (<>) {
		s/\(Rev Apr 92\)//;
		s/Count by.*//;
		s/,/ /g;

		if (/^North\/South *(.*)/) {
			$ns = $1;
		}
		if (/^East\/West *(.*)/) {
			$ew = $1;
		}
		if (/Date: *(.*)Weather:(.*)/) {
			$date = $1;
			$weather = $2;
		}
		if (/^BIKES/) {
			@bikes = split(/ +/);
		}
		if (/^NORTHBOUND/) {
			$leg = "northbound";
			$leg2 = "southbound";
		}
		if (/^EASTBOUND/) {
			$leg = "eastbound";
			$leg2 = "westbound";
		}

		if (/^Hours /) {
			my $line = $_;
			chomp $line;
			$line =~ s/  */ /g;
			$line =~ tr/A-Z/a-z/;
			$line =~ s/ped/pd/g;
			unless ($line =~ /^hours lt th rt total hours lt th rt total n-s pd sch pd sch/ ||
			        $line =~ /^hours lt th rt total hours lt th rt total e-w pd sch pd sch/) {
				$ok = 0;
			}
		}

		if (/^([0-9:.]+)-([0-9:.]+)/) {
			my @fields = split(/ +/);

			if ($#fields == 14) {
				chomp $fields[$#fields];
				$fields[0] = fixtime($fields[0]);

				if ($fields[1] != 0 || $fields[2] != 0 || $fields[3] != 0 ||
				    $fields[6] != 0 || $fields[7] != 0 || $fields[8] != 0 ||
				    $fields[11] != 0 || $fields[12] != 0 || $fields[13] != 0 || $fields[14] != 0) {
					if ($fields[4] != $fields[1] + $fields[2] + $fields[3] ||
					    $fields[9] != $fields[6] + $fields[7] + $fields[8] ||
					    $fields[10] != $fields[4] + $fields[9]) {
						# print "mismatched sum in $ARGV\n";
					} else {
						$movement{$fields[0]}{$leg}{"lt"} = $fields[1];
						$movement{$fields[0]}{$leg}{"th"} = $fields[2];
						$movement{$fields[0]}{$leg}{"rt"} = $fields[3];

						$movement{$fields[0]}{$leg2}{"lt"} = $fields[6];
						$movement{$fields[0]}{$leg2}{"th"} = $fields[7];
						$movement{$fields[0]}{$leg2}{"rt"} = $fields[8];

						$movement{$fields[0]}{$leg}{"p"} = sprintf("%d (%s %s)", $fields[11] + $fields[12], $fields[11], $fields[12]);
						$movement{$fields[0]}{$leg2}{"p"} = sprintf("%d (%s %s)", $fields[13] + $fields[14], $fields[13], $fields[14]);
					}
				}
			} elsif ($#fields == 13) {
				chomp $fields[$#fields];
				$fields[0] = fixtime($fields[0]);

				if ($fields[1] != 0 || $fields[2] != 0 || $fields[3] != 0 ||
				    $fields[5] != 0 || $fields[6] != 0 || $fields[7] != 0 ||
				    $fields[10] != 0 || $fields[11] != 0 || $fields[12] != 0 || $fields[13] != 0) {
					if ($fields[4] != $fields[1] + $fields[2] + $fields[3] ||
					    $fields[8] != $fields[5] + $fields[6] + $fields[7] ||
					    $fields[9] != $fields[3] + $fields[8]) {
						# print "mismatched sum in $ARGV\n";
					} else {
						$movement{$fields[0]}{$leg}{"lt"} = $fields[1];
						$movement{$fields[0]}{$leg}{"th"} = $fields[2];
						$movement{$fields[0]}{$leg}{"rt"} = $fields[3];

						$movement{$fields[0]}{$leg2}{"lt"} = $fields[5];
						$movement{$fields[0]}{$leg2}{"th"} = $fields[6];
						$movement{$fields[0]}{$leg2}{"rt"} = $fields[7];

						$movement{$fields[0]}{$leg}{"p"} = sprintf("%d (%s %s)", $fields[10] + $fields[11], $fields[10], $fields[11]);
						$movement{$fields[0]}{$leg2}{"p"} = sprintf("%d (%s %s)", $fields[12] + $fields[13], $fields[12], $fields[13]);
					}
				}
			}

			# print "$#fields $ARGV\n";
		}
		last if /\014/;
	}

	$ns =~ s/,/ /g;
	$ns =~ s/ +/ /g;
	$ns =~ s/ *$//g;
	$ew =~ s/,/ /g;
	$ew =~ s/ +/ /g;
	$ew =~ s/ *$//g;
	$date =~ s/ +/ /g;
	$date =~ s/ *$//g;
	$weather =~ s/ +/ /g;

	if ($ns ne "" && $ok) {
		my $time;
		my $anyp = 0;

		for $time (keys(%movement)) {
			my $direction;
			for $direction ("southbound", "westbound", "northbound", "eastbound") {
				if ($movement{$time}{$direction}{'p'} != 0) {
					$anyp = 1;
				}
			}
		}
		if (!$anyp) {
			for $time (keys(%movement)) {
				my $direction;
				for $direction ("southbound", "westbound", "northbound", "eastbound") {
					$movement{$time}{$direction}{'p'} = "";
				}
			}
		}

		my $peakv = 0;
		my $peakt = -1;

		for $time (sort(keys(%movement))) {
			my $v = 0;

			for my $direction ("southbound", "westbound", "northbound", "eastbound") {
				for my $turn ("rt", "th", "lt") {
					$v += $movement{$time}{$direction}{$turn};
				}
			}

			if ($v >= $peakv) {
				$peakv = $v;
				my ($hour, $minute) = split(/:/, $time);
				$peakt = int($hour * 4 + $minute / 15);
			}
		}

		for $time (sort(keys(%movement))) {
			my $fn = $ARGV;

			print "$fn,$ns / $ew,x,$date,$time,";
			$anything = 1;

			my $direction;
			for $direction ("southbound", "westbound", "northbound", "eastbound") {
				my $turn;
				for $turn ("rt", "th", "lt") {
					print "$movement{$time}{$direction}{$turn},";
				}
			}

			for $direction ("southbound", "westbound", "northbound", "eastbound") {
				print "$movement{$time}{$direction}{'p'},";
			}

			if (0 && $#bikes == 4) {
				my ($hour, $minute) = split(/:/, $time);
				my $t = int($hour * 4 + $minute / 15);
				my $n = $bike_scale[$t] / $bike_scale[$peakt];

				printf("%f,%f,%f,%f\n", $bikes[4] * $n, $bikes[1] * $n, $bikes[3] * $n, $bikes[2] * $n);
			} else {
				print ",,,\n";
			}
		}

		if (!$anything) {
			# print "nothing in $ARGV\n";
		}

	}

	last if $_ eq "";
}
