#!/usr/bin/perl

print "source,name,misc,date,time,SB-Right,SB-Thru,SB-Left,WB-Right,WB-Thru,WB-Left,NB-Right,NB-Thru,NB-Left,EB-Right,EB-Thru,EB-Left,N-Ped,E-Ped,S-Ped,W-Ped,N-Bike,E-Bike,S-Bike,W-Bike,lat,lon\n";

$foot = .00000274;
$pi = 4 * atan2(1, 1);

open(IN, "to-geocode");
while (<IN>) {
	chomp;
	($name, $lat, $lon) = split(/,/);

	$name =~ s/^[0-9]* //;
	$lon =~ s/^ *//;

	if ($lon ne "") {
		$exactlat{$name} = $lat;
		$exactlon{$name} = $lon;
	}
}
close(IN);

open(IN, "la-intersections");
while (<IN>) {
	chomp;
	($name, $lat, $lon) = split(/,/);
	$name =~ tr/a-z/A-Z/;
	$name =~ s/,//g;
	$name =~ s/\.//g;

	$name =~ s/\bWEST\b/W/g;
	$name =~ s/\bEAST\b/E/g;
	$name =~ s/\bNORTH\b/N/g;
	$name =~ s/\bSOUTH\b/S/g;

	$name =~ s/^[NSEW] //;
	$name =~ s/\bAT [NSEW] /AT /;
	$name =~ s/\bAT\b/\//;

 	$name =~ s/\bROAD\b/RD/g;
	$name =~ s/\bLANE\b/LN/g;
	$name =~ s/\bSTREET\b/ST/g;
	$name =~ s/\bAVENUE\b/AVE/g;
	$name =~ s/\bAVE\b/AV/g;
	$name =~ s/\bBOULEVARD\b/BLVD/g;
	$name =~ s/\bTERRACE\b/TER/g;
	$name =~ s/\bTERR\b/TER/g;
	$name =~ s/\bHIGHWAY\b/HWY/g;
	$name =~ s/\bBLVD\b/BL/g;
	$name =~ s/\bDRIVE\b/DR/g;

	if ($lat{$name} ne "") {
		$latd = $lat{$name} - $lat;
		$lond = ($lon{$name} - $lon) * cos($lat{$name});
		$d = sqrt($latd * $latd + $lond * $lond);
		if ($d > 200 * $foot) {
			$dup{$name} = 1;
			next;
		}
	}

	$lat{$name} = $lat;
	$lon{$name} = $lon;
}
close(IN);

for $n (keys(%dup)) {
	$lat{$n} = "";
	$lon{$n} = "";
}


sub geocode {
	$_ = @_[0];

	s/\015//;
	s/^[ \t]*//;
	s/&nbsp;//;
	chomp;

	if (defined ($exactlat{$_})) {
		return "$exactlat{$_},$exactlon{$_}";
	}

	tr/a-z/A-Z/;
	s/,//g;
	s/\.//g;

	s/\bWEST\b/W/g;
	s/\bEAST\b/E/g;
	s/\bNORTH\b/N/g;
	s/\bSOUTH\b/S/g;

	s/\bAT\b/\//i;
	s/^[NSEW] //;
	s/\/ [NSEW] /\/ /g;

	s/\bROAD\b/RD/g;
	s/\bLANE\b/LN/g;
	s/\bSTREET\b/ST/g;
	s/\bAVENUE\b/AVE/g;
	s/\bAVE\b/AV/g;
	s/\bBOULEVARD\b/BLVD/g;
	s/\bTERRACE\b/TER/g;
	s/\bTERR\b/TER/g;
	s/\bHIGHWAY\b/HWY/g;
	s/\bBLVD\b/BL/g;
	s/\bDRIVE\b/DR/g;

	s/\bFIRST\b/1ST/g;
	s/\bSECOND\b/2ND/g;
	s/\bTHIRD\b/3RD/g;
	s/\bFOURTH\b/4TH/g;
	s/\bFIFTH\b/5TH/g;
	s/\bSIXTH\b/6TH/g;
	s/\bSEVENTH\b/7TH/g;
	s/\bEIGHTH\b/8TH/g;
	s/\bNINTH\b/9TH/g;
	s/\b1 ST\b/1ST/g;
	s/\b2 ND\b/2ND/g;
	s/\b3 RD\b/3RD/g;
	s/\b4 TH\b/4TH/g;
	s/\b5 TH\b/5TH/g;
	s/\b6 TH\b/6TH/g;
	s/\b7 TH\b/7TH/g;
	s/\b8 TH\b/8TH/g;
	s/\b9 TH\b/9TH/g;

	s/\bBERVELY\b/BEVERLY/g;
	s/\bWILSHILE\b/WILSHIRE/g;
	s/\bAVIATIO\b/AVIATION/g;
	s/\bINGELWOOD\b/INGLEWOOD/g;
	s/\bFGUEROA\b/FIGUEROA/g;
	s/\bBRAODWAY\b/BROADWAY/g;
	s/\bCAHUENEGA\b/CAHUENGA/g;

	return "$lat{$_},$lon{$_}";
}

for $file (<reports/*.html>) {
	$base = $file;
	$base =~ s/.*\///;

        open (IN, "<$file");
        while (<IN>) {
                last if /<td class="tablerecord">/;
        }

        <IN>;
        $name = <IN>;

	$name =~ s/\015//;
	$name =~ s/^[ \t]*//;
	$name =~ s/&nbsp;//;
	chomp $name;

	while (<IN>) {
		if (/http:\/\/navigatela.lacity.org\/dot\/traffic_data\/manual_counts\/([^"]*).pdf/) {
			$base = "$1.txt";
			# print "$base -> $name\n";
			$name{$base} = $name;
		}
	}

	#print "$base -> $name{$base}\n";
	close(IN);
}

while (<>) {
	chomp;
	($id, $name, $rest) = split(/,/, $_, 3);

	# next if $seen{$name};
	$seen{$name} = 1;

	$out = $_;

	if ($id =~ /^oak/ || $id =~ /^dowd/) {
		# wrong county!
		$where = ",";
	} else {
		$where = geocode($name);

		if ($where eq ",") {
			$where = geocode($name{$id});
		}
	}

	if ($where eq ",") {
		# print "xxx-";
	}

	print "$out,$where\n";
}
